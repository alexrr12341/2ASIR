h2. *Tarea 1: Entorno de desarrollo*

*Realiza un fork del repositorio de GitHub: https://github.com/jd-iesgn/iaw_gestionGN.*
Le damos a fork y vemos que está como nuestro repositorio
https://github.com/alexrr12341/iaw_gestionGN


*Clona el repositorio en tu equipo.*

alexrr@pc-alex:~/pythondjango$ git clone git@github.com:alexrr12341/iaw_gestionGN.git


*Crea un entorno virtual python3 e instala las dependencias necesarias para que funcione el proyecto (fichero requierements.txt).*
<pre>
alexrr@pc-alex:~/pythondjango/iaw_gestionGN$ python3 -m venv virtual
alexrr@pc-alex:~/pythondjango/iaw_gestionGN$ source virtual/bin/activate
(virtual) alexrr@pc-alex:~/pythondjango/iaw_gestionGN$ 

apt install libjpeg62-turbo-dev
pip install -r requirements.txt
</pre>
*Comprueba que vamos a trabajar con una base de datos sqlite (gestion\settings.py). ¿Cómo se llama la base de datos que vamos a crear?*
<pre>
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}
</pre>


*Crea la base de datos: python3 manage.py migrate. A partir del modelo de datos se crean las tablas de la base de datos.*
<pre>
python3 manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, centro, contenttypes, convivencia, sessions
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying centro.0001_initial... OK
  Applying centro.0002_cursos_equipoeducativo... OK
  Applying centro.0003_auto_20161102_1656... OK
  Applying centro.0004_auto_20161102_1721... OK
  Applying centro.0005_auto_20161105_1217... OK
  Applying centro.0006_auto_20161106_1741... OK
  Applying convivencia.0001_initial... OK
  Applying sessions.0001_initial... OK

</pre>


*Añade los datos de prueba a la base de datos. Para más información: https://coderwall.com/p/mvsoyg/django-dumpdata-and-loaddata. Utiliza el fichero datos.json.*

<pre>
python3 manage.py loaddata datos.json
Installed 89 object(s) from 1 fixture(s)
</pre>

*Entra en la zona de administración para comprobar que los datos se han añadido correctamente. Usuario: admin contraseña: asdasd1234).*
*Ejecuta el servidor web de desarrollo y comprueba en el navegador que la aplicación está funcionando. Accede con el usuario usuario (contraseña: asdasd1234).*
Ahora vamos a encender el servidor
<pre>
python3 manage.py runserver
</pre>
!pythonserver.png!

Accedemos al usuario
!pythonserver2.png!

Y entramos a la zona de administración
!pythonserver3.png!



h2. *Tarea 2: Desarrollando nuestra aplicación*

*Modifica la página inicial de la aplicación para que aparezca tu nombre.*
Vamos a templates/base.html y editamos
<pre>
    <title>Alejandro Gestiona IESGN</title>
        <h3 class="text-muted">Gestiona - Alejandro Rodríguez</h3>
</pre>
!pythonserver4.png!
*Sube los cambios al repositorio*
<pre>
git add *
git commit -m "Cambios"
git push
</pre>

h2. *Tarea 3: Entorno de producción*
*Instala en el servidor los servicios necesarios (apache2, mysql, …). Instala el módulo de apache2 para ejecutar código python.*
<pre>
apt install apache2
apt install mariadb-server
apt install libapache2-mod-wsgi-py3
</pre>

*Clona tu repositorio en el DocumentRoot de tu virtualhost.*

Primero vamos a crear un nuevo virtualhost:

<pre>
<VirtualHost *:80>
        ServerName www.gestionapython.com
        ServerAdmin webmaster@localhost
        DocumentRoot /var/www/gestiona
        ErrorLog ${APACHE_LOG_DIR}/error.log
        CustomLog ${APACHE_LOG_DIR}/access.log combined
</VirtualHost>
</pre>

<pre>
a2ensite pythonserver
</pre>
<pre>
root@apachito:/var/www/gestiona# git clone https://github.com/alexrr12341/iaw_gestionGN.git
</pre>

*Crea un entorno virtual e instala las dependencias de tu aplicación.*
<pre>
apt install zlib1g-dev
apt install python3-venv
apt install libjpeg62-turbo-dev
python3 -m venv virtual
pip install -r requirements.txt #En el entorno virtual
</pre>

*Instala el módulo que permite que python trabaje con mysql:*
<pre>
apt install python3-mysqldb
pip install mysql-connector-python #En el entorno virtual
</pre>

*Configura un virtualhost en apache2 con la configuración adecuada para que funcione la aplicación. El punto de entrada de nuestro servidor será iaw_gestionGN/gestion/wsgi.py.*
Ahora vamos a preparar el virtualhost
<pre>
<VirtualHost *:80>
        ServerName www.gestionapython.com
        ServerAdmin webmaster@localhost
        DocumentRoot /var/www/gestiona
        ErrorLog ${APACHE_LOG_DIR}/error.log
        CustomLog ${APACHE_LOG_DIR}/access.log combined
        WSGIScriptAlias / /var/www/gestiona/iaw_gestionGN/gestion/wsgi.py
        WSGIDaemonProcess django1 user=www-data group=www-data processes=1 threads=5 python-path=/var/www/gestiona/iaw_gestionGN:/var/www/gestiona/iaw_gestionGN/virtual/lib/python3.7/site-packages
        <Directory /var/www/gestiona/iaw_gestionGN>
            WSGIProcessGroup django1
            WSGIApplicationGroup %{GLOBAL}
            Require all granted
        </Directory>
</VirtualHost>

</pre>

*Crea una base de datos y un usuario en mysql.*
<pre>
CREATE DATABASE myproject;
CREATE USER 'myprojectuser' IDENTIFIED BY 'password';
GRANT ALL PRIVILEGES ON * . * TO 'myprojectuser'@'%';
</pre>

*Configura la aplicación para trabajar con mysql, para ello modifica la configuración de la base de datos en el archivo settings.py:*
<pre>
DATABASES = {
      'default': {
          'ENGINE': 'mysql.connector.django',
          'NAME': 'myproject',
          'USER': 'myprojectuser',
          'PASSWORD': 'password',
          'HOST': 'localhost',
          'PORT': '',
      }
  }
</pre>

*Crea las tablas de la base de datos y carga los datos de pruebas. Accede a mysql y comprueba que se han creado de forma adecuada.*
<pre>
python3 manage.py migrate
</pre>
<pre>
show tables;
+---------------------------------+
| Tables_in_myproject             |
+---------------------------------+
| auth_group                      |
| auth_group_permissions          |
| auth_permission                 |
| auth_user                       |
| auth_user_groups                |
| auth_user_user_permissions      |
| centro_alumnos                  |
| centro_areas                    |
| centro_areas_Departamentos      |
| centro_cursos                   |
| centro_cursos_EquipoEducativo   |
| centro_departamentos            |
| centro_profesores               |
| convivencia_amonestaciones      |
| convivencia_sanciones           |
| convivencia_tiposamonestaciones |
| django_admin_log                |
| django_content_type             |
| django_migrations               |
| django_session                  |
+---------------------------------+
20 rows in set (0.001 sec)
</pre>
*Desactiva en la configuración (fichero settings.py) el modo debug a False. Para que los errores de ejecución no den información sensible de la aplicación.*
<pre>
DEBUG = False
</pre>
*Muestra la página funcionando.*

Si queremos que se vean los templates en nuestro virtualhost añadimos
<pre>
root@apachito:/var/www/gestiona/iaw_gestionGN/static# cp -r /usr/local/lib/python3.7/dist-packages/django/contrib/admin/static/admin/ .
root@apachito:/var/www/gestiona/iaw_gestionGN/static# chown -R www-data:www-data admin/ 
</pre>
<pre>
        Alias "/static/" "/var/www/gestiona/iaw_gestionGN/static/"
</pre>

!pythonserver5.png!
!pythonserver6.png!

h2 *Tarea 4: Modificación de la aplicación en el entorno de producción*
*Modifica la página inicial para que muestre otra imagen. Despliega los cambios en el servidor de producción.*

En nuestro entorno de desarrollo modificamos la imagen iesgn.png y hacemos
<pre>
alexrr@pc-alex:~/pythondjango/iaw_gestionGN$ git add *
Las siguientes rutas son ignoradas por uno de tus archivos .gitignore:
db.sqlite3
Use -f si realmente quiere agregarlos.
alexrr@pc-alex:~/pythondjango/iaw_gestionGN$ git commit -m "que guapo"
[master 71f55a5] que guapo
 1 file changed, 0 insertions(+), 0 deletions(-)
 rewrite static/img/iesgn.jpg (96%)
alexrr@pc-alex:~/pythondjango/iaw_gestionGN$ git push
Username for 'https://github.com': alexrodriguezrojas98@gmail.com
Password for 'https://alexrodriguezrojas98@gmail.com@github.com': 
Enumerando objetos: 9, listo.
Contando objetos: 100% (9/9), listo.
Compresión delta usando hasta 8 hilos
Comprimiendo objetos: 100% (5/5), listo.
Escribiendo objetos: 100% (5/5), 196.14 KiB | 32.69 MiB/s, listo.
Total 5 (delta 2), reusado 0 (delta 0)
remote: Resolving deltas: 100% (2/2), completed with 2 local objects.
To https://github.com/alexrr12341/iaw_gestionGN
   2462028..71f55a5  master -> master

</pre>

Y en nuestro entorno de producción hacemos
<pre>
root@apachito:/var/www/gestiona/iaw_gestionGN# git pull
remote: Enumerating objects: 5, done.
remote: Counting objects: 100% (5/5), done.
remote: Compressing objects: 100% (4/4), done.
remote: Total 5 (delta 1), reused 4 (delta 1), pack-reused 0
Unpacking objects: 100% (5/5), done.
From https://github.com/alexrr12341/iaw_gestionGN
   2462028..71f55a5  master     -> origin/master
Updating 2462028..71f55a5
Fast-forward
 static/img/iesgn.jpg | Bin 29353 -> 200688 bytes
 1 file changed, 0 insertions(+), 0 deletions(-)
</pre>
Y vemos los cambios
*Esta foto no ha sido realizada por mi, Internet es maravilloso*

!pythonserver7.png!

*Vamos a crear una nueva tabla en la base de datos, para ello sigue los siguientes pasos:*

Añadimos un nuevo fichero en el fichero centro/models.py
<pre>
class Modulos(models.Model):	
     Abr = models.CharField(max_length=4)
     Nombre = models.CharField(max_length=50)
     Unidad = models.ForeignKey(Cursos,blank=True,null=True,on_delete=models.SET_NULL)
		
     def __unicode__(self):
         return self.Abr+" - "+self.Nombre 		

     class Meta:
         verbose_name="Modulo"
         verbose_name_plural="Modulos"
</pre>
Hacemos la migración
<pre>
(virtual) alexrr@pc-alex:~/pythondjango/iaw_gestionGN$ python manage.py makemigrations
Migrations for 'centro':
  centro/migrations/0007_modulos.py
    - Create model Modulos
(virtual) alexrr@pc-alex:~/pythondjango/iaw_gestionGN$ python3 manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, centro, contenttypes, convivencia, sessions
Running migrations:
  Applying centro.0007_modulos... OK
</pre>

Ahora vamos al sitio de administración de django centros/admin.py
<pre>
from centro.models import Cursos,Alumnos,Departamentos,Profesores,Areas,Modulos
</pre>
Y al final añadimos esta línea
<pre>
admin.site.register(Modulos)
</pre>

Y lo ponemos en git
<pre>
(virtual) alexrr@pc-alex:~/pythondjango/iaw_gestionGN$ git add *
Las siguientes rutas son ignoradas por uno de tus archivos .gitignore:
db.sqlite3
Use -f si realmente quiere agregarlos.
(virtual) alexrr@pc-alex:~/pythondjango/iaw_gestionGN$ git commit -m "cambios"
[master d03d5c8] cambios
 3 files changed, 40 insertions(+), 1 deletion(-)
 create mode 100644 centro/migrations/0007_modulos.py
(virtual) alexrr@pc-alex:~/pythondjango/iaw_gestionGN$ git push
Username for 'https://github.com': alexrodriguezrojas98@gmail.com
Password for 'https://alexrodriguezrojas98@gmail.com@github.com': 
Enumerando objetos: 12, listo.
Contando objetos: 100% (12/12), listo.
Compresión delta usando hasta 8 hilos
Comprimiendo objetos: 100% (7/7), listo.
Escribiendo objetos: 100% (7/7), 1.08 KiB | 1.08 MiB/s, listo.
Total 7 (delta 5), reusado 0 (delta 0)
remote: Resolving deltas: 100% (5/5), completed with 5 local objects.
To https://github.com/alexrr12341/iaw_gestionGN
   71f55a5..d03d5c8  master -> master
</pre>

Y en nuestro entorno de desarrollo
<pre>
root@apachito:/var/www/gestiona/iaw_gestionGN# git pull
remote: Enumerating objects: 5, done.
remote: Counting objects: 100% (5/5), done.
remote: Compressing objects: 100% (4/4), done.
remote: Total 5 (delta 1), reused 4 (delta 1), pack-reused 0
Unpacking objects: 100% (5/5), done.
From https://github.com/alexrr12341/iaw_gestionGN
   2462028..71f55a5  master     -> origin/master
Updating 2462028..71f55a5
Fast-forward
 static/img/iesgn.jpg | Bin 29353 -> 200688 bytes
 1 file changed, 0 insertions(+), 0 deletions(-)
root@apachito:/var/www/gestiona/iaw_gestionGN# git pull
remote: Enumerating objects: 7, done.
remote: Counting objects: 100% (7/7), done.
remote: Compressing objects: 100% (5/5), done.
remote: Total 7 (delta 2), reused 4 (delta 2), pack-reused 0
Unpacking objects: 100% (7/7), done.
From https://github.com/alexrr12341/iaw_gestionGN
   71f55a5..d03d5c8  master     -> origin/master
Updating 71f55a5..d03d5c8
Fast-forward
 centro/admin.py                   |  3 ++-
 centro/migrations/0007_modulos.py | 27 +++++++++++++++++++++++++++
 centro/models.py                  | 11 +++++++++++
 3 files changed, 40 insertions(+), 1 deletion(-)
 create mode 100644 centro/migrations/0007_modulos.py
</pre>

Y en el servidor hacemos un
<pre>
(virtual) root@apachito:/var/www/gestiona/iaw_gestionGN# python3 manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, centro, contenttypes, convivencia, sessions
Running migrations:
  Applying centro.0007_modulos... OK
</pre>


